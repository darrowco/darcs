# This is the default configuration file for gitit.
# Lines beginning with # are comments.
# Uncommented lines show the defaults.

# [Config A] Local testing
# ------------------------
# Comment/uncomment as needed

repository-path: .
user-file: gitit-users
static-dir: static
templates-dir: static/templates
log-file: gitit.log
mail-command:

## [Config B] Production
## ------------------------
## Comment/uncomment as needed
## ** Don't forget to update the production config file! **
#
#repository-path: /var/lib/gitit/wikidata
#user-file: /var/lib/gitit/gitit-users
#static-dir: /var/lib/gitit/wikidata/static
#templates-dir: /var/lib/gitit/wikidata/static/templates
#log-file: /var/log/gitit/gitit.log
#cache-dir: /var/lib/gitit/cache
#mail-command: sendmail %s
## Disabled for now because we need to find a way to get the dependencies
## sorted - 2012-06-15
##plugins: /var/lib/gitit/plugins/Dot,
##	 /var/lib/gitit/plugins/Ditaa,
##	 /var/lib/gitit/plugins/TrackerLinks

port: 5001
# sets the port on which the web server will run.

repository-type: git
# specifies the type of repository used for wiki content.
# Options are Git and Darcs.

# repository-path: .
# specifies the path of the repository directory.  If it does not
# exist, gitit will create it on startup.

# user-file: gitit-users
# specifies the path of the file containing user login information.
# If it does not exist, gitit will create it (with an empty user list).

# static-dir: static
# specifies the path of the static directory (containing javascript,
# css, and images).  If it does not exist, gitit will create it
# and populate it with required scripts, stylesheets, and images.

default-page-type: Markdown 
# specifies the type of markup used to interpret pages in
# the wiki. Two values are currently supported: Markdown and RST.
# If Markdown is selected, pandoc's syntax extensions (for footnotes,
# delimited code blocks, etc.) will be enabled.  Note that pandoc's
# reStructuredText parser is not complete, so some pages may
# not be rendered correctly if RST is selected.

# templates-dir: static/templates
# specifies the path of the directory containing page templates.
# If it does not exist, gitit will create it with default templates.
# Users may wish to edit the templates to customize the appearance of
# their wiki. The template files are HStringTemplate templates.
# Variables to be interpolated appear between $'s. Literal $'s must be
# backslash-escaped.

# log-file: gitit.log
# specifies the path of gitit's log file.  If it does not exist,
# gitit will create it. The log is in Apache combined log format.

log-level: DEBUG
# determines how much information is logged.
# Possible values (from most to least verbose) are DEBUG, INFO,
# NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY.

front-page: FrontPage
# specifies which wiki page is to be used as the wiki's front page.
# Gitit creates a default front page on startup, if one does not exist
# already.

no-delete: FrontPage, Thanks, Donations
# specifies pages that cannot be deleted through the web interface.
# (They can still be deleted directly using git or darcs.)
# A comma-separated list of page names.  Leave blank to allow
# every page to be deleted.

no-edit:
# specifies pages that cannot be edited through the web interface.
# Leave blank to allow every page to be edited.

default-summary: Updated
# specifies text to be used in the change description if the author
# leaves the "description" field blank.  If default-summary is blank
# (the default), the author will be required to fill in the description
# field.

table-of-contents: no
# specifies whether to print a tables of contents (with links to
# sections) on each wiki page.

plugins: 
# specifies a list of plugins to load.  Plugins may be specified
# either by their path or by their module name.  If the plugin name
# starts with Gitit.Plugin., gitit will assume that the plugin is
# an installed module and will not try to find a source file.
# Examples:
# plugins: plugins/DotPlugin.hs, CapitalizeEmphasisPlugin.hs
# plugins: plugins/DotPlugin
# plugins: Gitit.Plugin.InterwikiLinks

max-cache-size: 2M
# specifies an upper limit on the size of the in-memory page cache,
# in bytes.  (The abbreviations K, M, and G may be used for
# thousand, million, and billion.)

use-cache: yes

max-upload-size: 100000K
# specifies an upper limit on the size (in bytes) of files uploaded
# through the wiki's web interface.

debug-mode: no
# if "yes", causes debug information to be logged while gitit is running.

mime-types-file: /etc/mime.types
# specifies the path of a file containing mime type mappings.
# Each line of the file should contain two fields, separated by
# whitespace. The first field is the mime type, the second is a
# file extension.  For example:
# video/x-ms-wmx                    wmx
# If the file is not found, some simple defaults will be used.

use-recaptcha: no
# if "yes", causes gitit to use the reCAPTCHA service
# (http://recaptcha.net) to prevent bots from creating accounts.

recaptcha-private-key: 
recaptcha-public-key: 
# specifies the public and private keys for the reCAPTCHA service.
# To get these, you need to create an account at http://recaptcha.net.

access-question:  What revision control system is this wiki about?
access-question-answers: darcs, Darcs, DARCS
# specifies a question that users must answer when they attempt to create
# an account, along with a comma-separated list of acceptable answers.
# This can be used to institute a rudimentary password for signing up as
# a user on the wiki, or as an alternative to reCAPTCHA.
# Example:
# access-question:  What is the code given to you by Ms. X?
# access-question-answers:  RED DOG, red dog

#TODO: we want compression because it's faster; but there're bugs in Happstack
#which mess up gzip encoding with browsers like Konqueror or Opera or Elinkss.
#When Gitit is built against a fixed Happstack, flip this to yes
compress-responses: no

wiki-title: UCLA Library

require-authentication: modify

# mail-command: sendmail %s
# specifies the command to use to send notification emails.
# '%s' will be replaced by the destination email address.
# The body of the message will be read from stdin.
# If this field is left blank, password reset will not be offered.

reset-password-message:
  > From: nobody@darcs.net
  > To: $useremail$
  > Subject: Wiki password reset
  >
  > Dear $username$:
  > 
  > To reset your password, please follow the link below:
  > http://darcs.net$resetlink$
  > 
  > Yours sincerely,
  > The Wiki Master
